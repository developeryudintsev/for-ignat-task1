{"version":3,"sources":["common/Button.tsx","common/Input.tsx","task1/Telegram.tsx","common/Menu.tsx","App.tsx","serviceWorker.ts","index.tsx","task1/TelegramStyles.module.css","common/Menu.module.css"],"names":["Button","props","className","title","onClick","callback","Input","useState","error","setError","onAddTaskClick","sendName","trim","clickEnter","type","value","onChange","event","setSendName","currentTarget","onKeyPress","charCode","Telegram","id","v1","name","names","setNames","console","log","style","wrapper","telega","surName","tt","arQualities","map","m","key","prioritet","class1","class2","toDo","Delete","changeFilter","length","alert","recordName","NamesFoo","Menu","on","setOn","onOff","OnValue","exact","to","callBack","opacity","MondayACtive","Monday","TuesdayActive","Tuesday","App","setarQualities","newArQualities","filter","f","filtered","setFiltered","filteredarQualities","setOpacity","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.e6153ac1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './Button.styles.css'\r\n\r\ntype ButtonPropsType = {\r\n    title: string\r\n    callback: () => void\r\n}\r\n\r\nexport const Button = (props:ButtonPropsType) => {\r\n    return (\r\n        <button className={props.title==='delete'?'orangeButton': 'universalButton'}\r\n                onClick={props.callback}>{props.title}</button>\r\n    )\r\n}\r\n","import React, {useState, ChangeEvent, KeyboardEvent} from \"react\";\r\nimport './Input.styles.css'\r\nimport {Button} from \"../common/Button\";\r\n\r\ntype InputPropsType = {\r\n    sendName: string\r\n    setSendName: (value: string) => void\r\n    clickEnter: (value: string) => void\r\n}\r\n\r\nexport const Input = (props: InputPropsType) => {\r\n    let [error, setError] = useState<string | null>(null);\r\n    const onChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setError('');\r\n        props.setSendName(event.currentTarget.value)\r\n    };\r\n\r\n    const onKeyPress = (event: KeyboardEvent<HTMLInputElement>) => {\r\n        if (event.charCode === 13) {\r\n            props.clickEnter(props.sendName);\r\n            onAddTaskClick();\r\n        }\r\n    };\r\n\r\n    function onAddTaskClick() {\r\n        if (props.sendName.trim() !== '') {\r\n            props.clickEnter(props.sendName);\r\n            setError('')\r\n        } else {\r\n            setError(' Title is required')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input className={props.sendName ? 'universal' : 'error'} type=\"text\" value={props.sendName}\r\n                   onChange={onChange}\r\n                   onKeyPress={onKeyPress}\r\n            />\r\n\r\n            <Button title={'SEND'} callback={() => {onAddTaskClick()}}/>\r\n            {<div className=\"error-message\">{error}</div>}\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport style from './TelegramStyles.module.css';\r\nimport {v1} from \"uuid\";\r\nimport {Button} from \"../common/Button\";\r\nimport {Input} from \"../common/Input\";\r\nimport {Menu} from \"../common/Menu\";\r\n\r\ntype ITelegram = {\r\n    name: string,\r\n    surName: string,\r\n    arQualities: Array<InArray>\r\n    Delete: (id: string) => void;\r\n    changeFilter: (value: string) => void;\r\n}\r\ntype InArray = {\r\n    id: string,\r\n    toDo: string,\r\n    prioritet: string,\r\n}\r\n\r\nexport function Telegram(props: ITelegram) {\r\n    let [sendName, setSendName] = useState('');\r\n    let [names, setNames] = useState([\r\n        {id: v1(), name: 'Sasha Yudintsev'}\r\n    ])\r\n    console.log(names)\r\n    let counter = 1;\r\n    let sum = 1;\r\n\r\n    function clickEnter(sendName: string) {\r\n        if (sendName.length >= 3) {\r\n            alert('Hi USER ' + sendName);\r\n            NamesFoo(sendName);\r\n        }\r\n        setSendName('')\r\n    }\r\n\r\n    function NamesFoo(sendName: string) {\r\n        let recordName = {id: v1(), name: sendName};\r\n        setNames([recordName, ...names]);\r\n        console.log(names.length + 1)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n                <div className={style.wrapper}>\r\n                <div className={style.telega}>\r\n                    <p></p>\r\n                    <div>{props.name}</div>\r\n                    <div>{props.surName}</div>\r\n                    <hr/>\r\n\r\n                    <table className={style.tt}>\r\n                        <th>TODO</th>\r\n                        <th>PRIORITET</th>\r\n                    </table>\r\n                    <table>\r\n                        {props.arQualities.map(m =>\r\n                            <div key={m.id}\r\n                                 className={m.prioritet === 'hight' ? style.class1 : style.class2}>\r\n                                <tr>\r\n                                    <td>{m.toDo}</td>\r\n                                    <td>{m.prioritet}</td>\r\n                                    <Button title={\"delete\"} callback={() => {\r\n                                        props.Delete(m.id)\r\n                                    }}/>\r\n                                </tr>\r\n                            </div>)}\r\n                    </table>\r\n                    <p></p>\r\n                    <Button title={\"All\"} callback={() => props.changeFilter('all')}/>\r\n                    <Button title={\"HightPrioritet\"} callback={() => props.changeFilter('HightPrioritet')}/>\r\n                    <Button title={\"MiddlePrioritet\"} callback={() => props.changeFilter('MiddlePrioritet')}/>\r\n                    <Button title={\"LowPrioritet\"} callback={() => props.changeFilter('LowPrioritet')}/>\r\n                    <p></p>\r\n                    <p></p>\r\n                    <Input sendName={sendName} setSendName={setSendName} clickEnter={clickEnter}/>\r\n                    <span>\r\n                  <h1>names count: {names.length}</h1>\r\n                </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Telegram\r\n\r\n","import React, {useState} from 'react';\r\nimport style from './Menu.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype callBackType = {\r\n    callBack: () => void;\r\n    opacity: boolean\r\n}\r\n\r\nexport const Menu = (props: callBackType) => {\r\n    let[on,setOn]=useState<string|null>(null);\r\n    const onOff=(OnValue:string|null)=>{\r\n        setOn(OnValue)\r\n    }\r\n\r\n    function callBackHandler(){\r\n        props.callBack();\r\n        setOn(null)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <NavLink exact to={'/'}>  <button  onClick={callBackHandler} className={style.Menu}>Menu</button></NavLink>\r\n            {props.opacity && <NavLink to={'/monday'}>\r\n                <button onClick={()=>onOff('Monday')} className={on==='Monday'? style.MondayACtive:style.Monday}>Monday</button>\r\n            </NavLink>}\r\n            {props.opacity && <button onClick={()=>onOff('Tuesday')} className={on==='Tuesday'?style.TuesdayActive:style.Tuesday}>Tuesday</button>}\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react';\nimport './App.css';\nimport Telegram from \"./task1/Telegram\";\nimport {v1} from \"uuid\";\nimport {BrowserRouter, HashRouter, Route} from \"react-router-dom\";\nimport {Menu} from \"./common/Menu\";\n\n\nfunction App() {\n    let [arQualities, setarQualities] = useState(\n        [\n            {id: v1(), toDo: 'JS work', prioritet: 'hight'},\n            {id: v1(), toDo: 'watch TV', prioritet: 'low'},\n            {id: v1(), toDo: 'games', prioritet: 'middle'},\n            {id: v1(), toDo: 'React', prioritet: 'hight'},\n            {id: v1(), toDo: 'HTMl', prioritet: 'low'},\n        ]\n    )\n\n    function Delete(id: string) {\n        let newArQualities = arQualities.filter(f => f.id !== id)\n        setarQualities(newArQualities)\n    }\n\n\n    let [filtered, setFiltered] = useState('All')\n    let filteredarQualities = arQualities;\n    if (filtered === 'HightPrioritet') {\n        filteredarQualities = arQualities.filter(f => f.prioritet === 'hight');\n    }\n    if (filtered === 'MiddlePrioritet') {\n        filteredarQualities = arQualities.filter(f => f.prioritet === 'middle');\n    }\n    if (filtered === 'LowPrioritet') {\n        filteredarQualities = arQualities.filter(f => f.prioritet === 'low');\n    }\n\n    function changeFilter(value: string) {\n        setFiltered(value)\n    }\n\n    let [opacity, setOpacity] = useState<boolean>(false)\n\n    function MenuFoo(opacityValue: boolean) {\n        setOpacity(opacityValue)\n    }\n\n\n    return (\n        <div>\n            <div className=\"App\">\n                <BrowserRouter>\n                <Menu callBack={() => MenuFoo(!opacity)} opacity={opacity}/>\n                    <Route path={'/monday'} render={() => <Telegram\n                        name='Sasha'\n                        surName='Yudintsev'\n                        arQualities={filteredarQualities}\n                        Delete={Delete}\n                        changeFilter={changeFilter}\n                    />}/>\n                </BrowserRouter>\n            </div>\n        </div>\n    );\n   }\n\nexport default App;\n\n\n//==============================\n// import React, {useState} from 'react';\n// import './App.css';\n// import Telegram from \"./task1/Telegram\";\n// import {v1} from \"uuid\";\n// import {BrowserRouter, HashRouter} from \"react-router-dom\";\n//\n//\n// function App() {\n//     let [arQualities, setarQualities] = useState(\n//         [\n//             {id: v1(), toDo: 'JS work', prioritet: 'hight'},\n//             {id: v1(), toDo: 'watch TV', prioritet: 'low'},\n//             {id: v1(), toDo: 'games', prioritet: 'middle'},\n//             {id: v1(), toDo: 'React', prioritet: 'hight'},\n//             {id: v1(), toDo: 'HTMl', prioritet: 'low'},\n//         ]\n//     )\n//\n//     function Delete(id: string) {\n//         let newArQualities = arQualities.filter(f => f.id !== id)\n//         setarQualities(newArQualities)\n//     }\n//\n//\n//     let [filtered, setFiltered] = useState('All')\n//     let filteredarQualities = arQualities;\n//     if (filtered === 'HightPrioritet') {\n//         filteredarQualities = arQualities.filter(f => f.prioritet === 'hight');\n//     }\n//     if (filtered === 'MiddlePrioritet') {\n//         filteredarQualities = arQualities.filter(f => f.prioritet === 'middle');\n//     }\n//     if (filtered === 'LowPrioritet') {\n//         filteredarQualities = arQualities.filter(f => f.prioritet === 'low');\n//     }\n//\n//     function changeFilter(value: string) {\n//         setFiltered(value)\n//     }\n//\n//     return (\n//         <div>\n//             <div className=\"App\">\n//                 <BrowserRouter>\n//                     <Route path='/monday' component={<Telegram\n//                         name='Sasha'\n//                         surName='Yudintsev'\n//                         arQualities={filteredarQualities}\n//                         Delete={Delete}\n//                         changeFilter={changeFilter}\n//                     />}/>\n//                 </BrowserRouter>\n//             </div>\n//         </div>\n//     );\n// }\n//\n// export default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n            <App/>,\n     </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"telega\":\"TelegramStyles_telega__ZoKJK\",\"class1\":\"TelegramStyles_class1__1knsX\",\"class2\":\"TelegramStyles_class2__3XOFT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"Menu_Menu__2YIBy\",\"Monday\":\"Menu_Monday__2oDlu\",\"Tuesday\":\"Menu_Tuesday__u7Kuz\",\"MondayACtive\":\"Menu_MondayACtive__1BN8z\",\"TuesdayActive\":\"Menu_TuesdayActive__1rIYg\"};"],"sourceRoot":""}